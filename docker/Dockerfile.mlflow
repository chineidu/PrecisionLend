# Base Image
FROM python:3.11-slim

ARG MLFLOW_ARTIFACT_STORE

# Environment variables
ENV \
    PYTHONUNBUFFERED=1 \
    VIRTUAL_ENV=/opt/venv \
    PATH="/opt/venv/bin:${PATH}" \
    LC_ALL=C.UTF-8 \
    LANG=C.UTF-8 \
    DEBIAN_FRONTEND=noninteractive \
    LOCK_FILE_PATH="/opt/uv.lock.build"

# Install system dependencies
RUN apt-get -qq update \
    && apt-get -qq -y install git \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get -qq -y clean

# Create directories
RUN mkdir -p "${MLFLOW_ARTIFACT_STORE}"/app

# Set up Python virtual environment and dependencies
RUN pip install --no-cache-dir uv==0.5.5

WORKDIR /app

# Copy project files
COPY ./pyproject.toml ./*.lock ./docker /app/

# Create virtual environment and install dependencies
RUN uv venv ${VIRTUAL_ENV} \
    && . ${VIRTUAL_ENV}/bin/activate \
    && uv pip compile pyproject.toml -o requirements.txt \
    && uv pip install -r requirements.txt \
    && rm -rf "${HOME}/.cache/*"

# Set up entrypoint
USER root
COPY ./docker/*.sh /app/docker/
RUN chmod +x /app/docker/*.sh

# Set the default command to run the MLflow server script
CMD ["/app/docker/run-server.sh"]
